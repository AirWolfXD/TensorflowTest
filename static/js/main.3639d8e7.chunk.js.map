{"version":3,"sources":["utilities.js","App.js","index.js"],"names":["drawRect","detections","ctx","forEach","prediction","x","y","width","height","text","Math","round","Number","EPSILON","strokeStyle","font","fillStyle","beginPath","fillText","rect","stroke","App","webcamRef","useRef","canvasRef","runCoco","a","cocossd","net","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","setInterval","detect","current","video","readyState","videoWidth","videoHeight","obj","getContext","document","onkeypress","space","event","cancel","useEffect","className","ref","muted","style","position","marginLeft","marginRight","left","right","textAlign","zindex","ReactDOM","render","StrictMode","getElementById"],"mappings":"+ZAAaA,EAAW,SAACC,EAAYC,GAEjCD,EAAWE,SAAQ,SAAAC,GAAa,IAAD,cACAA,EAAU,KADV,GACpBC,EADoB,KAClBC,EADkB,KAChBC,EADgB,KACVC,EADU,KAErBC,EAAOL,EAAU,MAAY,KAAOM,KAAKC,MAA+C,KAAxCP,EAAU,MAAYQ,OAAOC,UAAkB,IAOrGX,EAAIY,YADU,QAEdZ,EAAIa,KAAO,aACXb,EAAIc,UAHU,QAIdd,EAAIe,YACJf,EAAIgB,SAAST,EAAMJ,EAAGC,GACtBJ,EAAIiB,KAAKd,EAAGC,EAAGC,EAAOC,GACtBN,EAAIkB,aC0EGC,MArFf,WACE,IACMC,EAAYC,iBAAO,MACnBC,EAAYD,iBAAO,MAEnBE,EAAO,uCAAG,8BAAAC,EAAA,sEACEC,MADF,OACVC,EADU,OAGZC,EAAM,IAAIC,yBAAyB,kCACvCC,OAAOC,gBAAgBC,MAAMJ,GAE3BK,aAAY,WACVC,EAAOP,GACC,KACP,IATW,2CAAH,qDAYPO,EAAM,uCAAG,WAAOP,GAAP,uBAAAF,EAAA,yDAEkB,qBAAtBJ,EAAUc,SACK,OAAtBd,EAAUc,SAC6B,IAAvCd,EAAUc,QAAQC,MAAMC,WAJb,wBAMLD,EAAQf,EAAUc,QAAQC,MAC1BE,EAAajB,EAAUc,QAAQC,MAAME,WACrCC,EAAclB,EAAUc,QAAQC,MAAMG,YAE5ClB,EAAUc,QAAQC,MAAM9B,MAAQgC,EAChCjB,EAAUc,QAAQC,MAAM7B,OAASgC,EAEjChB,EAAUY,QAAQ7B,MAAQgC,EAC1Bf,EAAUY,QAAQ5B,OAASgC,EAdhB,UAgBOZ,EAAIO,OAAOE,GAhBlB,QAgBLI,EAhBK,OAiBLvC,EAAMsB,EAAUY,QAAQM,WAAW,MAEzC1C,EAASyC,EAAKvC,GACdyC,SAASC,WAAa,SAAUC,GAC9BA,EAAQA,GAASd,OAAOe,MACxBd,gBAAgBe,SACXN,EDxBEtC,SAAQ,SAAAC,GACf,IAAMK,EAAOL,EAAU,MAAY,IAAMM,KAAKC,MAA+C,KAAxCP,EAAU,MAAYQ,OAAOC,UAAkB,IADvE,cAEFT,EAAU,KAFR,GAMzByB,GANyB,oBAMnB,IAAIC,yBAAyBrB,IACvCsB,OAAOC,gBAAgBC,MAAMJ,OCNpB,4CAAH,sDA8BZ,OAFAmB,qBAAU,WAAKvB,MAAW,IAGxB,yBAAKwB,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,IAAD,CACEC,IAAK5B,EACL6B,OAAO,EACPC,MAAO,CACLC,SAAU,WACVC,WAAY,OACZC,YAAa,OACbC,KAAM,EACNC,MAAO,EACPC,UAAW,SACXC,OAAQ,EACRpD,MAAO,IACPC,OAAQ,OAIZ,4BACE0C,IAAK1B,EACL4B,MAAO,CACLC,SAAU,WACVC,WAAY,OACZC,YAAa,OACbC,KAAM,EACNC,MAAO,EACPC,UAAW,SACXC,OAAQ,EACRpD,MAAO,IACPC,OAAQ,UC9EpBoD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnB,SAASoB,eAAe,W","file":"static/js/main.3639d8e7.chunk.js","sourcesContent":["export const drawRect = (detections, ctx) =>{\r\n\r\n    detections.forEach(prediction=>{\r\n        const [x,y,width,height] = prediction['bbox'];\r\n        const text = prediction['class'] + \": \" + Math.round((prediction['score'] + Number.EPSILON) * 100) + \"%\";\r\n\r\n        // if(text === 'person'){\r\n        //     return;\r\n        // }\r\n\r\n        const color = 'green'\r\n        ctx.strokeStyle = color\r\n        ctx.font = '18px Arial'\r\n        ctx.fillStyle = color\r\n        ctx.beginPath()\r\n        ctx.fillText(text, x, y)\r\n        ctx.rect(x, y, width, height)\r\n        ctx.stroke()\r\n    })\r\n}\r\n\r\nexport const play = (detections) => {\r\n    detections.forEach(prediction => {\r\n        const text = prediction['class'] + \" \" + Math.round((prediction['score'] + Number.EPSILON) * 100) + \"%\";\r\n        const [x,y,width,height] = prediction['bbox'];\r\n        // if(text === 'person'){\r\n        //     return;\r\n        // }\r\n        var msg = new SpeechSynthesisUtterance(text);\r\n        window.speechSynthesis.speak(msg);\r\n    })\r\n}","import React, { useRef, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport {drawRect, play} from \"./utilities\";\nfunction App() {\n  var time = 0;\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const runCoco = async () => {\n  const net = await cocossd.load();\n    \n  var msg = new SpeechSynthesisUtterance(\"Press the space bar to use TTS\");\n  window.speechSynthesis.speak(msg);\n  \n    setInterval(() => {\n      detect(net);\n      time += 50;\n    }, 50);\n  };\n\n  const detect = async (net) => {\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      const obj = await net.detect(video);\n      const ctx = canvasRef.current.getContext(\"2d\");\n\n      drawRect(obj, ctx)\n      document.onkeypress = function (space) {\n        space = space || window.event;\n        speechSynthesis.cancel();\n        play(obj);\n      };\n    }\n  };\n\n  useEffect(()=>{runCoco()},[]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          muted={true} \n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 8,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}