{"version":3,"sources":["utilities.js","App.js","index.js"],"names":["drawRect","detections","ctx","text","a","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","Promise","resolve","Audio","onend","forEach","prediction","x","y","width","height","strokeStyle","font","fillStyle","beginPath","fillText","rect","stroke","play","App","webcamRef","useRef","canvasRef","runCoco","cocossd","net","setInterval","detect","current","video","readyState","videoWidth","videoHeight","obj","console","log","getContext","useEffect","className","ref","muted","style","position","marginLeft","marginRight","left","right","textAlign","zindex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+ZAAaA,EAAW,SAACC,EAAYC,GAAO,4CAqBxC,WAAoBC,GAApB,eAAAC,EAAA,6DACQC,EAAM,IAAIC,yBAAyBH,GACvCI,OAAOC,gBAAgBC,MAAMJ,GAFjC,kBAIW,IAAIK,SAAQ,SAAAC,GACfC,MAAMC,MAAQF,MALtB,4CArBwC,sBAExCV,EAAWa,SAAQ,SAAAC,GAAa,IAAD,cACAA,EAAU,KADV,GACpBC,EADoB,KAClBC,EADkB,KAChBC,EADgB,KACVC,EADU,KAErBhB,EAAOY,EAAU,MAEvB,GAAY,WAATZ,EAAH,CAKAD,EAAIkB,YADU,QAEdlB,EAAImB,KAAO,aACXnB,EAAIoB,UAHU,QAIdpB,EAAIqB,YACJrB,EAAIsB,SAASrB,EAAMa,EAAGC,GACtBf,EAAIuB,KAAKT,EAAGC,EAAGC,EAAOC,GACtBjB,EAAIwB,SAjBgC,oCAkBpCC,CAAKxB,QCkFEyB,MAzFf,WACE,IAAMC,EAAYC,iBAAO,MACnBC,EAAYD,iBAAO,MAGnBE,EAAO,uCAAG,4BAAA5B,EAAA,sEAGI6B,MAHJ,OAGRC,EAHQ,OAMdC,aAAY,WACVC,EAAOF,KACN,KARW,2CAAH,qDAWPE,EAAM,uCAAG,WAAOF,GAAP,uBAAA9B,EAAA,yDAGkB,qBAAtByB,EAAUQ,SACK,OAAtBR,EAAUQ,SAC6B,IAAvCR,EAAUQ,QAAQC,MAAMC,WALb,wBAQLD,EAAQT,EAAUQ,QAAQC,MAC1BE,EAAaX,EAAUQ,QAAQC,MAAME,WACrCC,EAAcZ,EAAUQ,QAAQC,MAAMG,YAG5CZ,EAAUQ,QAAQC,MAAMpB,MAAQsB,EAChCX,EAAUQ,QAAQC,MAAMnB,OAASsB,EAGjCV,EAAUM,QAAQnB,MAAQsB,EAC1BT,EAAUM,QAAQlB,OAASsB,EAlBhB,UAsBOP,EAAIE,OAAOE,GAtBlB,QAsBLI,EAtBK,OAuBXC,QAAQC,IAAIF,GAENxC,EAAM6B,EAAUM,QAAQQ,WAAW,MAIzC7C,EAAS0C,EAAKxC,GA7BH,4CAAH,sDAmCZ,OAFA4C,qBAAU,WAAKd,MAAW,IAGxB,yBAAKe,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,IAAD,CACEC,IAAKnB,EACLoB,OAAO,EACPC,MAAO,CACLC,SAAU,WACVC,WAAY,OACZC,YAAa,OACbC,KAAM,EACNC,MAAO,EACPC,UAAW,SACXC,OAAQ,EACRvC,MAAO,IACPC,OAAQ,OAIZ,4BACE6B,IAAKjB,EACLmB,MAAO,CACLC,SAAU,WACVC,WAAY,OACZC,YAAa,OACbC,KAAM,EACNC,MAAO,EACPC,UAAW,SACXC,OAAQ,EACRvC,MAAO,IACPC,OAAQ,UCvFpBuC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.477d432b.chunk.js","sourcesContent":["export const drawRect = (detections, ctx) =>{\r\n\r\n    detections.forEach(prediction=>{\r\n        const [x,y,width,height] = prediction['bbox'];\r\n        const text = prediction['class'];\r\n\r\n        if(text === 'person'){\r\n            return;\r\n        }\r\n\r\n        const color = 'green'\r\n        ctx.strokeStyle = color\r\n        ctx.font = '18px Arial'\r\n        ctx.fillStyle = color\r\n        ctx.beginPath()\r\n        ctx.fillText(text, x, y)\r\n        ctx.rect(x, y, width, height)\r\n        ctx.stroke()\r\n        play(text);\r\n    })\r\n\r\n    async function play(text) {\r\n        var msg = new SpeechSynthesisUtterance(text);\r\n        window.speechSynthesis.speak(msg);\r\n        \r\n        return new Promise(resolve => {\r\n            Audio.onend = resolve;\r\n        });\r\n    }\r\n\r\n}","// Import dependencies\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\n// 1. TODO - Import required model here\n// e.g. import * as tfmodel from \"@tensorflow-models/tfmodel\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\n// 2. TODO - Import drawing utility here\n// e.g. import { drawRect } from \"./utilities\";\nimport {drawRect} from \"./utilities\";\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Main function\n  const runCoco = async () => {\n    // 3. TODO - Load network \n    // e.g. const net = await cocossd.load();\n    const net = await cocossd.load();\n\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 1000);\n  };\n\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // 4. TODO - Make Detections\n      // e.g. const obj = await net.detect(video);\n      const obj = await net.detect(video);\n      console.log(obj);\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n\n      // 5. TODO - Update drawing utility\n      // drawSomething(obj, ctx)  \n      drawRect(obj, ctx)\n    }\n  };\n\n  useEffect(()=>{runCoco()},[]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          muted={true} \n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 8,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}